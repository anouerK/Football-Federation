package com.esprit.main;


import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.esprit.entities.Badge;
import com.esprit.entities.User;
import com.esprit.gui.AddArticle;
import com.esprit.gui.AddBadge;
import com.esprit.gui.BaseFront;
import com.esprit.gui.MainBadge;
import com.esprit.gui.LoginForm;
import com.esprit.gui.MainArticle;
import com.esprit.gui.ShowFormBadge;
import java.util.ArrayList;
import com.esprit.entities.panier;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;
   public static User u_c = new User();
   public static ArrayList<User> u;
   // public static User u_c = new User(2,"hamadi","ksaay2000@gmail.com","12345","admin","avatar.png",new Badge(),0);
    
    public static ArrayList<panier> pan = new ArrayList();

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

       theme = UIManager.initFirstTheme("/theme");
      //  theme = UIManager.initFirstTheme("/theme4");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        
         if(current != null){
            current.show();
            return;
        }
        
        //new LoginForm(theme).show();
      // MainArticle Home = new MainArticle(theme);
    //  LoginForm Home = new LoginForm(theme);
    BaseFront front = new BaseFront();
       //LoginForm Home = new LoginForm(theme);
        front.show();
       
        
        
    }

    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
